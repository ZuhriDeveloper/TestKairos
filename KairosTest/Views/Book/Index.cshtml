@model IEnumerable<KairosTest.Models.Book>

@{
    ViewBag.Title = "Book List";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-9">
        <h2>Book</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home" )">Home</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Book</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox-title">
                <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Create", "Book")'"><i class="fa fa-plus"></i> Create New Book</button>
            </div>

            <div class="ibox-content">

                <table id="grid" class="table table-striped table-bordered table-hover dataTables-example">
                    <thead>
                        <tr>
                            <th> @Html.DisplayNameFor(model => model.BookTitle)</th>
                            <th> @Html.DisplayNameFor(model => model.Author)</th>
                            <th> @Html.DisplayNameFor(model => model.BookType)</th>
                            <th> @Html.DisplayNameFor(model => model.RentPrice)</th>
                            <th> Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model == null)
                        {

                            <tr>
                                <td colspan="6" style="        text-align: center">There is no Data Available</td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="center"> @Html.DisplayFor(modelItem => item.BookTitle)</td>
                                    <td class="center"> @Html.DisplayFor(modelItem => item.Author)</td>
                                    <td class="center"> @Html.DisplayFor(modelItem => item.BookType)</td>
                                    <td class="text-right"> @Html.DisplayFor(modelItem => item.RentPrice)</td>
                                    <td class="" style="width:200px">
                                        @Html.ActionLink("Edit", "Edit", new { ID = item.ID }, new { @class = "btn btn-info fa fa-paste" })

                                        @Html.ActionLink("Delete", "Delete", new { ID = item.ID }, new { @class = "btn btn-danger fa fa-trash", onclick = "return confirm('Are sure wants to delete this book?');" })
                                        @*&nbsp;
                                            <form asp-action="Delete" asp-route-id="@item.ID" method="post">
                                                <button type="submit" onclick="return confirm('Are you sure you want to delete this book?');" class="btn btn-sm btn-danger">
                                                    Delete
                                                </button>
                                            </form>*@
                                    </td>

                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/dataTables/datatables.min.css" />
    </environment>
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib/dataTables/datatables.min.js"></script>
        <script src="~/lib/dataTables/dataTables.bootstrap4.min.js"></script>
    </environment>

    <script type="text/javascript">
        $(document).ready(function () {

            $('#grid').DataTable({
                autoWidth: true,
                pageLength: 25,
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    {
                        extend: 'copy', exportOptions: {
                            columns: [0, 1, 2, 3]
                        }
                    },
                    {
                        extend: 'excel', title: 'ListBook', exportOptions: {
                            columns: [0, 1, 2, 3]
                        }
                    },
                    {
                        extend: 'pdf', title: 'ListBook', exportOptions: {
                            columns: [0, 1, 2, 3]
                        }, customize: function (doc) {
                            var rowCount = doc.content[1].table.body.length;
                            for (i = 1; i < rowCount; i++) {
                                doc.content[1].table.body[i][0].alignment = 'left';
                                doc.content[1].table.body[i][1].alignment = 'left';
                                doc.content[1].table.body[i][2].alignment = 'left';
                                doc.content[1].table.body[i][3].alignment = 'right';
                            }
                        }
                    },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        }, exportOptions: {
                            columns: [0, 1, 2, 3]
                        }
                    }
                ]

            });

        });

    </script>


}


