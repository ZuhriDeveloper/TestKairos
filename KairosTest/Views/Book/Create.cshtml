@model KairosTest.Models.Book

@using (Html.BeginForm("Create", "Book", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-lg-9">
            <h2>Create Book</h2>
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Home")">Home</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Book")">Book</a>
                </li>
                <li class="active breadcrumb-item">
                    <strong>Create New Book</strong>
                </li>
            </ol>
        </div>
    </div>

    <div class="wrapper wrapper-content animated fadeInRight">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox ">

                    <div class="ibox-content">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.BookTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.BookTitle)
                                @Html.ValidationMessageFor(model => model.BookTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Author)
                                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.BookType, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.BookType)
                                @Html.ValidationMessageFor(model => model.BookType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.RentPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.RentPrice)
                                @Html.ValidationMessageFor(model => model.RentPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-primary" />
                                <button type="button" class="btn btn-warning" onclick="location.href='@Url.Action("Index", "Book")'">Cancel</button>
                                <div>@ViewBag.Message</div>
                                <div class="text-danger">@ViewBag.ErrorMessage</div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {


    <script type="text/javascript">

        $(document).ready(function () {
            $('#RentPrice').on('blur', function () {
                var x = $('#RentPrice').val();
                $('#RentPrice').val(addCommas(x));
            });
        });


        function addCommas(x) {
            var parts = x.toString().split(".");
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            return parts.join(".");
        }

    </script>

}