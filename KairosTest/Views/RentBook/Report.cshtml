@model IEnumerable<KairosTest.Models.RentBook>

@{
    ViewBag.Title = "Rent List";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-9">
        <h2>Rent List</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home" )">Home</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Rent List</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">


            <div class="ibox-content">

                <table id="grid" class="table table-striped table-bordered table-hover dataTables-example">
                    <thead>
                        <tr>
                            <th> @Html.DisplayNameFor(model => model.Book.BookTitle)</th>
                            <th> @Html.DisplayNameFor(model => model.Book.Author)</th>
                            <th> @Html.DisplayNameFor(model => model.Book.BookType)</th>
                            <th> @Html.DisplayNameFor(model => model.Book.RentPrice)</th>
                            <th> @Html.DisplayNameFor(model => model.RentLenght)</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model == null)
                        {

                            <tr>
                                <td colspan="6" style="        text-align: center">There is no Data Available</td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="center"> @Html.DisplayFor(modelItem => item.Book.BookTitle)</td>
                                    <td class="center"> @Html.DisplayFor(modelItem => item.Book.Author)</td>
                                    <td class="center"> @Html.DisplayFor(modelItem => item.Book.BookType)</td>
                                    <td class="text-right"> @Html.DisplayFor(modelItem => item.PricePerDayDisplay)</td>
                                    <td class="center"> @Html.DisplayFor(modelItem => item.RentLenght)</td>
                                    <td class="text-right">@Html.DisplayFor(modelItem => item.Total) </td>


                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/dataTables/datatables.min.css" />
    </environment>
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib/dataTables/datatables.min.js"></script>
        <script src="~/lib/dataTables/dataTables.bootstrap4.min.js"></script>
        <script src="~/lib/dataTables/jquery.datatables.js"></script>
    </environment>

    <script type="text/javascript">


        $(document).ready(function () {

            jQuery.fn.dataTable.Api.register('sum()', function () {
                return this.flatten().reduce(function (a, b) {
                    var x = parseFloat(a) || 0;
                    var y = parseFloat($(b).attr('data-order')) || 0;
                    return x + y
                }, 0);
            });


            $('#grid').DataTable({
               
                //autoWidth: true,
                //pageLength: 25,
                //dom: '<"html5buttons"B>lTfgitp',
                //buttons: [
                //    { extend: 'excel', title: 'ListRent' },
                //    { extend: 'pdf', title: 'ListRent' },
                //]

                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(),
                        intVal = function (i) {
                            return typeof i === 'string' ?
                                i.replace(/[, Rs]|(\.\d{2})/g, "") * 1 :
                                typeof i === 'number' ?
                                    i : 0;
                        },
                        total2 = api
                            .column(5)
                            .data()
                            .reduce(function (a, b) {
                                return intVal(a) + intVal(b);
                            }, 0);

                    $(api.column(5).footer()).html(
                        ' ( $' + total2 + ' total)'
                    );
                }

            });




        });

    </script>


}


